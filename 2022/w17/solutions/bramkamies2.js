const subtract=(l,r)=>{const ZERO='0'.charCodeAt(0);const WRAP=10;const wrap=v=>v<0 ?(v % WRAP)+WRAP :(v % WRAP);const negate=buf=>{for(let i=0;i<buf.length;i++){buf[i]=(WRAP-1)-buf[i];}buf[buf.length-1]++;buf.neg=!buf.neg;};const toBuffer=value=>{const negative=value[0]==='-';if(negative){value=value.slice(1);}const buffer=Buffer.from("0"+value);for(let i=0;i<buffer.length;i++){buffer[i]=wrap(buffer[i]-ZERO);}if(negative){negate(buffer);}return buffer;};let sum=toBuffer(l);let car=toBuffer(r);negate(car);while(sum.length<car.length){sum=Buffer.concat([sum.subarray(0,1),sum]);}while(car.length<sum.length){car=Buffer.concat([car.subarray(0,1),car]);}for(let i=0;i<sum.length;){const inc=car[i];const value=sum[i];const next=value+inc;sum.writeUint8((next+WRAP)% WRAP,i);car.writeUint8(0,i);if(next>=WRAP){if(i>0){car[--i]++;}else{i++;}}else{i++;}}const negativeAnswer=sum[0]===9;if(negativeAnswer){negate(sum);for(let i=sum.length-1;i>=0;i--){let last=sum[i];if(last>=10){sum[i]=last % 10;if(i>0){sum[i-1]++;}}else{break;}}}let numberStart;for(numberStart=0;numberStart<sum.length-1;numberStart++){if(sum[numberStart]!==0){break;}}for(let i=numberStart;i<sum.length;i++){sum[i]=sum[i]+'0'.charCodeAt(0);}if(negativeAnswer){if(numberStart>0){numberStart--;sum[numberStart]='-'.charCodeAt(0);return sum.toString('utf8',numberStart);}else{return '-'+sum.toString('utf8',numberStart);}}else{return sum.toString('utf8',numberStart);}};module.exports=subtract;